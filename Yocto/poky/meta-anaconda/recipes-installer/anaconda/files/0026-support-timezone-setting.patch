From b57b55b6fcdf01ff2bc0fe959b8f146ad6553fe4 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 24 Jul 2018 14:40:25 +0800
Subject: [PATCH 26/65] support timezone setting

- If selected timezone does not exist in target,
  try to make a copy from host

- Drop unused /etc/adjtime (redhat specific),
  use /etc/localtime to replace (oe-core specific).

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Rebase for anaconda 34.

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/modules/timezone/installation.py | 25 +++++++------------------
 1 file changed, 7 insertions(+), 18 deletions(-)

diff --git a/pyanaconda/modules/timezone/installation.py b/pyanaconda/modules/timezone/installation.py
index d6dfd7bf7..a30d70289 100644
--- a/pyanaconda/modules/timezone/installation.py
+++ b/pyanaconda/modules/timezone/installation.py
@@ -17,6 +17,7 @@
 #
 import os
 import os.path
+import shutil
 
 from pyanaconda import ntp
 from pyanaconda.core import util
@@ -74,6 +75,9 @@ class ConfigureTimezoneTask(Task):
         rooted_tz_file = os.path.normpath(self._sysroot + tz_file)
         relative_path = os.path.normpath("../" + tz_file)
         link_path = os.path.normpath(self._sysroot + "/etc/localtime")
+        if not os.access(rooted_tz_file, os.R_OK) and os.access(tz_file, os.R_OK):
+            util.mkdirChain(os.path.dirname(rooted_tz_file))
+            shutil.copyfile(tz_file, rooted_tz_file)
 
         if not os.access(rooted_tz_file, os.R_OK):
             log.error("Timezone to be linked (%s) doesn't exist", rooted_tz_file)
@@ -100,24 +104,9 @@ class ConfigureTimezoneTask(Task):
             # there is no HW clock on s390(x)
             return
 
-        try:
-            with open(os.path.normpath(self._sysroot + "/etc/adjtime"), "r") as fobj:
-                lines = fobj.readlines()
-        except IOError:
-            lines = ["0.0 0 0.0\n", "0\n"]
-
-        try:
-            with open(os.path.normpath(self._sysroot + "/etc/adjtime"), "w") as fobj:
-                fobj.write(lines[0])
-                fobj.write(lines[1])
-                if self._is_utc:
-                    fobj.write("UTC\n")
-                else:
-                    fobj.write("LOCAL\n")
-        except IOError as ioerr:
-            msg = "Error while writing /etc/adjtime file: {}".format(ioerr.strerror)
-            raise TimezoneConfigurationError(msg) from ioerr
-
+        log.info("timezone %s" % self._timezone)
+        with open(self._sysroot + "/etc/timezone", "w") as fobj:
+            fobj.write('%s\n' % self._timezone)
 
 class ConfigureNTPTask(Task):
     """Installation task for NTP configuration."""
-- 
2.7.4

