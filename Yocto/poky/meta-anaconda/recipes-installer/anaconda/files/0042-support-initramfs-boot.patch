From cedfb60b4cea33edcc6308875a5c8b2aa255bc20 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 29 Jun 2019 15:46:45 +0800
Subject: [PATCH] support initramfs boot

- Create fake initramfs to cheat grub-mkconfig which
  could generate grub.cfg that have initrd setting.

- Make sure temp dir existed which required by dracut while live install.

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Update for anaconda 32:
* refactor code to create fake initrd file
* replace obsolete function util.getSysroot()

Signed-off-by: Kai Kang <kai.kang@windriver.com>

Rebase for anaconda 34.

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/modules/storage/bootloader/utils.py | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/pyanaconda/modules/storage/bootloader/utils.py b/pyanaconda/modules/storage/bootloader/utils.py
index 2fdf8b921..e02684f4d 100644
--- a/pyanaconda/modules/storage/bootloader/utils.py
+++ b/pyanaconda/modules/storage/bootloader/utils.py
@@ -21,7 +21,7 @@ from glob import glob
 from pyanaconda.modules.common.errors.installation import BootloaderInstallationError
 from pyanaconda.modules.storage.bootloader.image import LinuxBootLoaderImage
 from pyanaconda.core.configuration.anaconda import conf
-from pyanaconda.core.util import decode_bytes, execWithRedirect
+from pyanaconda.core.util import decode_bytes, execWithRedirect, mkdirChain
 from pyanaconda.product import productName
 
 from pyanaconda.anaconda_loggers import get_module_logger
@@ -96,7 +96,7 @@ def configure_boot_loader(sysroot, storage, kernel_versions):
         return
 
     # Collect the boot loader images.
-    _collect_os_images(storage, kernel_versions)
+    _collect_os_images(storage, kernel_versions, sysroot)
 
     # Write out /etc/sysconfig/kernel.
     _write_sysconfig_kernel(sysroot, storage)
@@ -113,7 +113,7 @@ def _get_rescue_kernel_versions(sysroot):
     return [f.split("/")[-1][8:] for f in rescue_versions]
 
 
-def _collect_os_images(storage, kernel_versions):
+def _collect_os_images(storage, kernel_versions, sysroot):
     """Collect the OS images for the boot loader.
 
     :param storage: an instance of the storage
@@ -135,6 +135,12 @@ def _collect_os_images(storage, kernel_versions):
     storage.bootloader.add_image(default_image)
     storage.bootloader.default = default_image
 
+    # Create fake initramfs to cheat grub-mkconfig
+    initrd = sysroot + "/boot/initramfs-%s.img" % version
+    if not os.path.exists(initrd):
+        with open(initrd, 'w') as f:
+            f.write('\n')
+
     # now add an image for each of the other kernels
     for version in kernel_versions:
         label = "%s-%s" % (base_label, version)
@@ -145,6 +151,10 @@ def _collect_os_images(storage, kernel_versions):
         )
         storage.bootloader.add_image(image)
 
+        initrd = sysroot + "/boot/initramfs-%s.img" % version
+        if not os.path.exists(initrd):
+            with open(initrd, 'w') as f:
+                f.write('\n')
 
 def _write_sysconfig_kernel(sysroot, storage):
     """Write to /etc/sysconfig/kernel.
@@ -280,6 +291,10 @@ def recreate_initrds(sysroot, kernel_versions):
         log.debug("new-kernel-pkg does not exist, using dracut instead")
         use_dracut = True
 
+    # Make sure temp dir existed, dracut requires it while live install
+    for subdir in ["log", "tmp"]:
+        mkdirChain(conf.target.system_root + "/var/volatile/%s" % subdir)
+
     for kernel in kernel_versions:
         log.info("Recreating initrd for %s", kernel)
 
-- 
2.7.4

