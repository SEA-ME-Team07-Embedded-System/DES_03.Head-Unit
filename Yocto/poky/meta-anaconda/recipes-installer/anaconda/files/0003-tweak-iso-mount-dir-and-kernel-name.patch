From 367fc710a94d802ace273c7aebb8f5f96647370b Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Mon, 24 Jun 2019 14:45:50 +0800
Subject: [PATCH] tweak iso mount dir and kernel name

- Tweak iso mount dir based on WRLinux

- Tweak kernel name based on OE

- Tweak nfs mount point of base repository to "/media/source"

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

* update context for anaconda 32
* backport patch from Upstream to 'Handle bytes and strings from RPM'
* replace obsolete function 'util.getSysroot'

Signed-off-by: Kai Kang <kai.kang@windriver.com>

Rebase for anaconda 34

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/core/constants.py                     |  4 ++--
 pyanaconda/modules/payloads/payload/dnf/utils.py | 14 ++++++++++----
 2 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/pyanaconda/core/constants.py b/pyanaconda/core/constants.py
index eafefe9f34..031e547d03 100644
--- a/pyanaconda/core/constants.py
+++ b/pyanaconda/core/constants.py
@@ -45,11 +45,11 @@ if productName.count(" "):                      # pylint: disable=no-member
 VIRTIO_PORT = "/dev/virtio-ports/org.fedoraproject.anaconda.log.0"
 
 ANACONDA_CLEANUP = "anaconda-cleanup"
-MOUNT_DIR = "/run/install"
+MOUNT_DIR = "/media/realroot"
 DRACUT_ISODIR = "/run/install/source"
 ISO_DIR = MOUNT_DIR + "/isodir"
 IMAGE_DIR = MOUNT_DIR + "/image"
-INSTALL_TREE = MOUNT_DIR + "/source"
+INSTALL_TREE = "/media/source"
 SOURCES_DIR = MOUNT_DIR + "/sources"
 BASE_REPO_NAME = "anaconda"
 
diff --git a/pyanaconda/modules/payloads/payload/dnf/utils.py b/pyanaconda/modules/payloads/payload/dnf/utils.py
index 7f6ec96da2..97ab4bfa27 100644
--- a/pyanaconda/modules/payloads/payload/dnf/utils.py
+++ b/pyanaconda/modules/payloads/payload/dnf/utils.py
@@ -55,7 +55,7 @@ def get_kernel_package(dnf_base, exclude_list):
         return None
 
     # Get the kernel packages.
-    kernels = ["kernel"]
+    kernels = ["kernel-image"]
 
     # ARM systems use either the standard Multiplatform or LPAE platform.
     if is_lpae_available():
@@ -168,19 +168,25 @@ def get_kernel_version_list():
 
     # Find all installed RPMs that provide 'kernel'.
     ts = rpm.TransactionSet(conf.target.system_root)
-    mi = ts.dbMatch('providename', 'kernel')
+    mi = ts.dbMatch()
+    mi.pattern('name', rpm.RPMMIRE_GLOB, 'kernel-image*')
 
     for hdr in mi:
+        log.info("hdr.filenames %s" % hdr.filenames)
+
         unicode_fnames = (decode_bytes(f) for f in hdr.filenames)
 
         # Find all /boot/vmlinuz- files and strip off vmlinuz-.
         files.extend((
             f.split("/")[-1][8:] for f in unicode_fnames
-            if fnmatch.fnmatch(f, "/boot/vmlinuz-*") or
-            fnmatch.fnmatch(f, "/boot/efi/EFI/%s/vmlinuz-*" % efi_dir)
+            if (fnmatch.fnmatch(f, "/boot/*") or
+            fnmatch.fnmatch(f, "/boot/efi/EFI/%s/*" % efi_dir)) and
+            len(f.split("/")[-1]) > 7 and not f.endswith('.sig')
         ))
 
     # Sort the kernel versions.
     sort_kernel_version_list(files)
 
+    log.info("kernelVersionList %s" % files)
+
     return files
-- 
2.7.4
