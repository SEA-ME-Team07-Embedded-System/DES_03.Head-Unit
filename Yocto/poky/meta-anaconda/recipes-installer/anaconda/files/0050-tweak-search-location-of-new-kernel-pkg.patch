From 4749c5a409cb2c121c575cb15118f1b8ff136d75 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 29 Jun 2019 16:15:14 +0800
Subject: [PATCH] tweak search location of new-kernel-pkg

In OE, it locates /sbin rather than /usr/sbin

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Update patch context and replace path to new-kernel-pkg in other files
for anaconda 32. Replace obsolete function util.getSysroot() as well.

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/modules/storage/bootloader/grub2.py | 2 +-
 pyanaconda/modules/storage/bootloader/utils.py | 6 +++---
 pyanaconda/modules/storage/bootloader/zipl.py  | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/pyanaconda/modules/storage/bootloader/grub2.py b/pyanaconda/modules/storage/bootloader/grub2.py
index 46c03af68..52116bcee 100644
--- a/pyanaconda/modules/storage/bootloader/grub2.py
+++ b/pyanaconda/modules/storage/bootloader/grub2.py
@@ -274,7 +274,7 @@ class GRUB2(BootLoader):
         defaults.write("GRUB_DISABLE_RECOVERY=\"true\"\n")
         #defaults.write("GRUB_THEME=\"/boot/grub2/themes/system/theme.txt\"\n")
 
-        if self.use_bls and os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if self.use_bls and os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             log.warning("BLS support disabled due new-kernel-pkg being present")
             self.use_bls = False
 
diff --git a/pyanaconda/modules/storage/bootloader/utils.py b/pyanaconda/modules/storage/bootloader/utils.py
index d53538d3a..abcdc3ec5 100644
--- a/pyanaconda/modules/storage/bootloader/utils.py
+++ b/pyanaconda/modules/storage/bootloader/utils.py
@@ -47,7 +47,7 @@ def create_rescue_images(sysroot, kernel_versions):
         root=sysroot
     )
 
-    if os.path.exists(sysroot + "/usr/sbin/new-kernel-pkg"):
+    if os.path.exists(sysroot + "/sbin/new-kernel-pkg"):
         use_nkp = True
     else:
         log.debug("new-kernel-pkg does not exist, calling scripts directly.")
@@ -242,7 +242,7 @@ def create_bls_entries(sysroot, storage, kernel_versions):
     :param kernel_versions: a list of kernel versions
     """
     # Not using BLS configuration, skip it
-    if os.path.exists(sysroot + "/usr/sbin/new-kernel-pkg"):
+    if os.path.exists(sysroot + "/sbin/new-kernel-pkg"):
         return
 
     # Remove any existing BLS entries, they will not match the new system's
@@ -284,7 +284,7 @@ def recreate_initrds(sysroot, kernel_versions):
     :param sysroot: a path to the root of the installed system
     :param kernel_versions: a list of kernel versions
     """
-    if os.path.exists(sysroot + "/usr/sbin/new-kernel-pkg"):
+    if os.path.exists(sysroot + "/sbin/new-kernel-pkg"):
         use_dracut = False
     else:
         log.debug("new-kernel-pkg does not exist, using dracut instead")
diff --git a/pyanaconda/modules/storage/bootloader/zipl.py b/pyanaconda/modules/storage/bootloader/zipl.py
index 2f4ec712f..6fc16ccaa 100644
--- a/pyanaconda/modules/storage/bootloader/zipl.py
+++ b/pyanaconda/modules/storage/bootloader/zipl.py
@@ -139,7 +139,7 @@ class ZIPL(BootLoader):
             self.secure
         ))
 
-        if self.use_bls and os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if self.use_bls and os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             log.warning("BLS support disabled due new-kernel-pkg being present")
             self.use_bls = False
 
-- 
2.7.4
