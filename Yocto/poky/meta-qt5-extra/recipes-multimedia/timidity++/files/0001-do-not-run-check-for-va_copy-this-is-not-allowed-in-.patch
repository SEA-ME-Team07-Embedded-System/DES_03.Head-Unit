From 4931f21b0fa6c29c934071525033dab77efbee38 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Sat, 23 Apr 2016 23:31:03 +0200
Subject: [PATCH] do not run check for va_copy - this is not allowed in cross
 environment
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: Inappropriate [cross specific]

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 configure.in | 74 ------------------------------------------------------------
 1 file changed, 74 deletions(-)

diff --git a/configure.in b/configure.in
index 4f10340..9e03a78 100644
--- a/configure.in
+++ b/configure.in
@@ -686,81 +686,7 @@ AC_CHECK_FUNC(open_memstream, [
 	 AC_DEFINE([HAVE_OPEN_MEMSTREAM],1,[Define to 1 if you have `open_memstream' function])
 	 ])
 
-dnl ***
-dnl *** va_copy checks (from GLIB)
-dnl ***
-
-AC_CACHE_CHECK([for an implementation of va_copy()],lib_cv_va_copy,[
-	AC_RUN_IFELSE([AC_LANG_SOURCE([[
-	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	va_copy (args2, args1);
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}]])],
-	[lib_cv_va_copy=yes],
-	[lib_cv_va_copy=no],[])
-])
-
-AC_CACHE_CHECK([for an implementation of __va_copy()],lib_cv___va_copy,[
-	AC_RUN_IFELSE([AC_LANG_SOURCE([[
-	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	__va_copy (args2, args1);
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}]])],
-	[lib_cv___va_copy=yes],
-	[lib_cv___va_copy=no],[])
-])
-
-if test "x$lib_cv_va_copy" = "xyes"; then
-  va_copy_func=va_copy
-else if test "x$lib_cv___va_copy" = "xyes"; then
-  va_copy_func=__va_copy
-fi
-fi
 
-if test -n "$va_copy_func"; then
-  AC_DEFINE_UNQUOTED(VA_COPY,$va_copy_func,[A 'va_copy' style function])
-fi
-
-AC_CACHE_CHECK([whether va_lists can be copied by value],lib_cv_va_val_copy,[
-	AC_RUN_IFELSE([AC_LANG_SOURCE([[
-	#include <stdarg.h>
-	void f (int i, ...) {
-	va_list args1, args2;
-	va_start (args1, i);
-	args2 = args1;
-	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
-	  exit (1);
-	va_end (args1); va_end (args2);
-	}
-	int main() {
-	  f (0, 42);
-	  return 0;
-	}]])],
-	[lib_cv_va_val_copy=yes],
-	[lib_cv_va_val_copy=no],[])
-])
-
-if test "x$lib_cv_va_val_copy" = "xno"; then
-  AC_DEFINE(VA_COPY_AS_ARRAY,1, ['va_lists' cannot be copies as values])
-fi
 
 # Checks on cygnus and MSYS
 if test "x$MSYS" = xyes ; then
-- 
2.5.5

